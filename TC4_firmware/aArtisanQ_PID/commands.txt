Serial Commands for aArtisan
============================

Notes:
 1. Terminate all command strings with newline, i.e. /n
 2. Delimiters between parameters may be comma, space, semicolon, or equals sign
 3. First five characters (max) of command name are significant
 4. A command may have up to 5 parameters, including the keyword

FILT,lev1,lev2,lev3,lev4
--------------------
Sets new digital filtering level (0-100 percent) on logical channels
1, 2, 3, and 4.
lev1 = new filtering level for logical channel 1 (etc)
DATA_ACKS :#DATA_OUT,FILT,chan,val


PID,T,ppp,iii,ddd
PID,T_POM,ppp,iii,ddd
-----------------
Sets new PID parameters ("T" is for "tuning"):
ppp = proportional coefficient Kp
iii = integral coefficient Ki
ddd = derivative coefficient Kd
T_POM = P_ON_M PID mode
T = P_ON_E PID mode
DATA_ACKS :#DATA_OUT,PID,SET,ppp,iii,ddd

PID,LIMIT,min,max
-----------------
Sets PID output limits
min = lower limit (0-100 and < max)
max = upper limit (0-100 and > min) 
DATA_ACKS :#DATA_OUT,PID,LIMIT,min,max


PID,SV,vvv
----------
Establishes new PID setpoint (vvv = set value, or SV)
DATA_ACKS :#DATA_OUT,PID,SV,vvv

PID,ON and PID,OFF
------------------
Turns the PID on or off.  PID always operates on OT1.
Turning the PID off will result in output on OT1 being turned off.
When PID is ON, additional values are streamed to serial:  heater duty, fan duty, SV
DATA_ACKS :#DATA_OUT,PID,ON/#DATA_OUT,PID,OFF
DATA_ACKS :#DATA_OUT,PID,OUT,temp,power

PID,CHAN,i
----------
Sets the input for the PID controller.
i = a decimal value 1 to 4 representing a physical port (TC1, TC2, TC3, TC4).
Example:
 CHAN,2100
 PID,CHAN,2
  this results in the sensor connected to physical port TC2 being
  used by the PID. TC2 was mapped to logical channel chan1 which
  corresponds to ET when using Artisan Roasting Scope
DATA_ACKS :#DATA_OUT,PID,CHAN,i

PID,CT,mmmm
-----------------
Sets new PID cycle time, in ms, to mmmm.
Default value is 1000 (1 second).
DATA_ACKS :#DATA_OUT,PID,CT,vvvv

PID,START
---------
Resets TC4 timer and activates PID.
Can be used when starting a roast.
Response from TC4 device is "# PID Roast Start"
DATA_ACKS :#DATA_OUT,PID,START

PID,STOP
----------------------
Turns off PID and heater
Sets fan to auto cool setting
Can be used at end of roast.
Response from TC4 device is "# PID Roast Stop"
DATA_ACKS :#DATA_OUT,PID,STOP

PID,P,x
---------
Sets the roast profile being used by the PID to val.
x = 0 used when receiving set variable values with the PID,SV command. Default condition.
x > 0 to access corresponding roast profile stored on TC4 EEPROM
Response from TC4 device is "# Profile 'val' selected"
DATA_ACKS :#DATA_OUT,PID,PROFILE,val

DCFAN,duty   (added 13-April 2014)
----------
where duty = 0 to 100 (percent output)
Changes the PWM duty cycle on FAN_PORT to duty.
By default, FAN_PORT is DI03 on Arduino (same as IO3 port).
Limits the increase in duty to 25 points per second to
address fan inrush current on Hottop (and possibly other) roasters
DATA_ACKS :#DATA_OUT,FAN,duty

CHAN,ijkl
-----------
where i,j,k,l = a decimal value 0 to 4 representing a physical port
Establishes the active logical channels (chan1, chan2, chan3, chan4)
and maps them to physical ports (TC1, TC2, TC3, TC4).  
A value of zero for the physical port inactivates the channel.
Response from TC4 device is "# Active channels set to ijkl"
Examples:
  chan,1200/n  TC1 -> chan1, TC2 -> chan2, chan3 and chan4 inactive
  chan,3210/n  TC3 -> chan1, TC2 -> chan2, TC1 -> chan3, chan4 inactive
Artisan Roasting Scope expects ET on chan1 and BT on chan2
DATA_ACKS :#DATA_OUT,CHAN,ijkl

UNITS,u
---------
where u = C or F.
Sets active temperature scale.  
DATA_ACKS :#DATA_OUT,UNITS,F / C 

READ
------
Requests current temperature readings on all active channels. 
Response from TC4 device is ambient temperature followed by a 
comma separated list of temperatures in current active units
in logical channel order: ambient,chan1,chan2,chan3,chan4

OT1,duty
-------
where duty = 0 to 100 (percent output)
Changes the PWM duty cycle on OT1 to duty.
DATA_ACKS :DATA_ACKS :#DATA_OUT,OT1,duty

OT1,up and OT1,down
-------------------
Adjusts OT1 duty up or down by DUTY_STEP increment as defined in user.h.
DATA_ACKS :DATA_ACKS :#DATA_OUT,OT1,duty

OT2,duty
-------
where duty = 0 to 100 (percent output)
Changes the PWM duty cycle on OT2 to duty.
DATA_ACKS :DATA_ACKS :#DATA_OUT,OT2,duty

OT2,up and OT2,down
-------------------
Adjusts OT2 duty up or down by DUTY_STEP increment as defined in user.h.
DATA_ACKS :DATA_ACKS :#DATA_OUT,OT2,duty

IO3,duty (not available in CONFIG_PAC3 mode)
-------
where duty = 0 to 100 (percent output)
Changes the PWM duty cycle on IO3 to duty.
Unlike the DCFAN command, the duty cycle is increased immmediately.
SUDDEN INCREASES IN FAN SPEED IS KNOWN TO CAUSE PROBLEMS ON 
SOME HOTTOP ROASTERS, SO USERS ARE ADVISED TO USE THE DCFAN COMMAND
INSTEAD.
DATA_ACKS :#DATA_OUT,IO3,duty

IO3,up and IO3,down (not available in CONFIG_PAC3 mode)
-------------------
Adjusts IO3 duty up or down by DUTY_STEP increment as defined in user.h.
DATA_ACKS :#DATA_OUT,IO3,duty

DWRITE,pin,val
----------------
where pin = Arduino pin number (D0 to D13 or A0 to A5)
      val = HIGH or LOW
Puts port associated with pin number in output mode and sets it HIGH or LOW.
No response from the TC4 device.

AWRITE,pin,level
------------------
where pin = Arduino pin number (D0 to D13)
      val = 0 to 255
Puts port associated with pin number in output mode and sets output level
0 to 255 (i.e. duty cycle 0 to 100%).
DATA_ACKS : #DATA_OUT,PWM,pin,val

Reset
-----
Resets TC4 timer
Response from TC4 device is "# Reset"
DATA_ACKS :#DATA_OUT,RST

LOAD (available in Roastlogger mode)
-------
Resets TC4 timer
No response from the TC4 device.

POWER=duty (available in Roastlogger mode)
---------
where duty = 0 to 100 (percent output)
Changes the duty cycle on OT1 to duty.
DATA_ACKS :#DATA_OUT,OT1,duty

FAN=duty (available in Roastlogger mode)
---------
where duty = 0 to 100 (percent output)
Changes the duty cycle on OT2 or IO3 to duty.
DATA_ACKS :#DATA_OUT,IO3,duty

Jim Gallt
12-DEC-2011
rev 13-April-2014
rev 17-April-2014
rev 23-Oct-2014
rev 28-Oct-2014
rev 04-Feb-2024




